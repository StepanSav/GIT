GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal. 
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
Справа сверху в github ‘+’, new repository, Repository name ‘JSON’ Public, Create a new repository.
 5. Клонировать репозиторий JSON на локальный компьютер.
mkdir json 
git clone https://github.com/StepanSav/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
cat >> new.json
 7. Добавить файл под  гит.
git add new.json
 8. Закоммитить файл.
git commit -m "new.json"
 9. Отправить файл на внешний GitHub репозиторий.
git push origin main
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json
{
		"ФИО": "Савинцев Степан Валерьевич",
		"Возраст": "36",
		"Колличество домашних животных": "0",
		"Будущая желаемая зарплата":"1000$"	
	}
 11. Отправить изменения на внешний репозиторий.
git add new.json
git commit -m "new.json"
git push origin main
 12. Создать файл preferences.json
> preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json
{
	"Любимый фильм": "Бойцовский Клуб",
	"Любимый сериал": "Викинги",
	"Любимая еда": "Оливье",
	"Страна которую хотели бы посетить": "Япония"

}
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
vim skills.json
{
	"Скилы": [
		"Скилл 1": "Testing theory",
		"Скилл 2": "Terminal Linux",
		"Скилл 3": "SQL",
		"Скилл 4": "GIT",
		"Скилл 5": "Postman",
		"Скилл 6": "Client-server architecture",
		"Скилл 7": "Mobile testing"
		]
}
 15. Отправить сразу 2 файла на внешний репозиторий.
git add preferences.json skills.json
git commit -m "preferences.json  skills.json"
git push origin main
 16. На веб интерфейсе создать файл bug_report.json.
Зайти в GitHub, нажмите на кнопку Add file, выберите Create new file 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
нажмите на кнопку Commit changes
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Нажать на карандаш в правом верхнем углу
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Справа сверху нажать кнопку Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull


XML
 21. Создать внешний репозиторий c названием XML.
Справа сверху в github ‘+’, new repository, Repository name ‘XML’ Public, Create a new repository.
 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/StepanSav/XML.git
 23. Внутри локального XML создать файл “new.xml”.
> new.xml
 24. Добавить файл под гит.
git add new.xml
 25. Закоммитить файл.
git commit –m “new.xml”
 26. Отправить файл на внешний GitHub репозиторий.
git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml
<person>
<name>Савинцев Степан Валерьевич</name>
<age>36</age>
<pets>0</pets>
<desired_salary>1000$</desired_salary>
</person>
 28. Отправить изменения на внешний репозиторий.
git add new.xml 
git commit -m "new.xml" 
git push
29. Создать файл preferences.xml
> preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
vim preferences.xml
<preferences>
<favorite_movie>Бойцовский Клуб</favorite_movie>
<favorit_series>Викинги</favorit_series>
<favorit_food>Оливье</favorit_food>
<desirend_travel_destination>Япония</desirend_travel_destination>
</preferences>
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
Vim sklls.xml
<skills>
<skills>Testing theory</skills>
<skills>Terminal Linux</skills>
<skills>SQL</skills>
<skills>GIT</skills>
<skills>Postman</skills>
<skills>Client-server architecture</skills>
<skills>Mobile testing</skills>
</skills>
 32. Сделать коммит в одну строку.
git add preferences.xml skills.xml && git commit -m "preferences.xml skills.xml"
 33. Отправить сразу 2 файла на внешний репозиторий.
git push
 34. На веб интерфейсе создать файл bug_report.xml.
Нажать кнопку Add file и + Create new file
35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Вверху внести название bug_report.xml внизу нажать зеленую кнопку Commit changes
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
<bug_report>
    <title>Facebook</title>
    <description>Появляется ошибка на странице продавца Agron Haxha во вкладке About the seller при клике по кнопке Facebook</description>
    <severity>minor</severity>
    <steps>
        <steps1>Зайти на сайт</steps1>
        <steps2>Все роли пользователя</steps2>
        <steps3>Зайти на страницу продавца</steps3>
        <steps4>Клик по кнопке Facebook</steps4>
    </steps> 
    <expected result>Открывается страница Facebook</expected result>
    <actual result>Не открывается страница Facebook</actual result>
    <reporter>Степан</reporter>
</bug_report>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Справа сверху нажать кнопку Commit changes
 38. Синхронизировать внешний и локальный репозиторий XML
git pull
